import { Component } from '@angular/core';
// import { NgForm } from '@angular/forms';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-registration-form',
  templateUrl: './registration-form.component.html',
  styleUrls: ['./registration-form.component.scss'],
})
export class RegistrationFormComponent {
  name: string = '';
  email: string = '';
  form: FormGroup;

  constructor(private fb: FormBuilder) {
    this.form = this.fb.group({
      // Form controls
    });
  }

  onSubmit() {
    if (this.form.valid) {
      // Generate an auto-generated password (you can use a library for this)
      const autoGeneratedPassword = this.generateRandomPassword();
      // console.log(autoGeneratedPassword);

      // Send the password to the provided email
      this.sendPasswordByEmail(this.email, autoGeneratedPassword);

      // Reset the form fields
      this.name = '';
      this.email = '';

      // Optionally, provide user feedback (e.g., display a confirmation message)
    }
  }

  private generateRandomPassword(): string {
    // console.log('in auto gen pass');

    // Implement your password generation logic here
    // For simplicity, let's generate an 8-character random password
    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    const passwordLength = 8;
    let password = '';
    for (let i = 0; i < passwordLength; i++) {
      const randomIndex = Math.floor(Math.random() * charset.length);
      password += charset.charAt(randomIndex);
    }
    return password;
  }

  private sendPasswordByEmail(email: string, password: string) {
    // Implement email sending logic here (e.g., using a backend service)
    // This code demonstrates sending a message to the console for testing purposes
    // console.log(`Sending password (${password}) to email: ${email}`);
  }
}
